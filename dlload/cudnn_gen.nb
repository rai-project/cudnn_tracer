(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25426,        554]
NotebookOptionsPosition[     23787,        522]
NotebookOutlinePosition[     24170,        539]
CellTagsIndexPosition[     24127,        536]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"csrc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\</usr/local/cuda/include/cudnn.h\>\"", ",", "\"\<Text\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744050807118692*^9, 3.744050830375332*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"1a0776aa-c9c5-44ae-b6b5-2a25f9aaa235"],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcs", "=", 
   RowBox[{"StringCases", "[", 
    RowBox[{"csrc", ",", 
     RowBox[{"\"\<cudnnStatus_t CUDNNWINAPI\>\"", "~~", 
      RowBox[{"Whitespace", "..."}], "~~", 
      RowBox[{"Shortest", "[", "x___", "]"}], "~~", "\"\<);\>\""}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.744050831465508*^9, 3.744050886596044*^9}, {
  3.744050938871372*^9, 3.744050942950933*^9}, {3.744050980502413*^9, 
  3.7440509855626698`*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"4c48b5dc-c772-44c2-acc1-cfb50732181a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"returnType", "[", "s_", "]"}], ":=", 
   RowBox[{"StringTrim", "[", 
    RowBox[{"First", "[", 
     RowBox[{"StringCases", "[", 
      RowBox[{"s", ",", 
       RowBox[{
        RowBox[{"x__", "~~", 
         RowBox[{"WhitespaceCharacter", "..."}], "~~", "\"\<CUDNNWINAPI\>\"", 
         "~~", "___"}], "\[Rule]", "x"}]}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744053091704237*^9, 3.744053119918701*^9}},
 CellLabel->
  "In[762]:=",ExpressionUUID->"6708290d-0de3-43d7-90fa-2434a9b4f033"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"funName", "[", "s_", "]"}], ":=", 
   RowBox[{"StringTrim", "[", 
    RowBox[{"First", "[", 
     RowBox[{"StringCases", "[", 
      RowBox[{"s", ",", 
       RowBox[{
        RowBox[{"\"\<cudnnStatus_t CUDNNWINAPI\>\"", "~~", 
         RowBox[{"Whitespace", "..."}], "~~", 
         RowBox[{"Shortest", "[", "x__", "]"}], "~~", "\"\<(\>\""}], 
        "\[Rule]", "x"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "funArgs0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funArgs0", "[", "s0_", "]"}], ":=", 
   RowBox[{
    RowBox[{"funArgs", "[", "s0", "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"s0", ",", 
          RowBox[{
           RowBox[{"\"\</*\>\"", "~~", 
            RowBox[{"Shortest", "[", "x___", "]"}], "~~", "\"\<*/\>\""}], 
           "\[Rule]", "\"\<\>\""}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"s", ",", "\"\<,\>\""}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{"#", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"__", "~~", 
                RowBox[{"WhitespaceCharacter", ".."}], "~~", 
                RowBox[{"PunctuationCharacter", "..."}], "~~", " ", "x__", "~~", 
                RowBox[{
                 RowBox[{"Except", "[", "WordCharacter", "]"}], "..."}]}], 
               "\[Rule]", "x"}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"StringTrim", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                 "WhitespaceCharacter", "|", "\"\<[\>\"", "|", "\"\<]\>\"", 
                  "|", "\"\<,\>\""}], ")"}], "..."}]}], "]"}], "&"}], "/@", 
            "\[IndentingNewLine]", 
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"s", ",", 
                RowBox[{
                 RowBox[{"\"\<cudnnStatus_t CUDNNWINAPI\>\"", "~~", 
                  RowBox[{"Whitespace", "..."}], "~~", "__", "~~", 
                  "\"\<(\>\"", "~~", 
                  RowBox[{"Longest", "[", "args___", "]"}], "~~", 
                  "\"\<)\>\""}], "\[Rule]", "args"}]}], "]"}], ",", 
              "\"\<\\n\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
         RowBox[{"StringCases", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"StringTrim", "/@", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringCases", "[", 
                RowBox[{"s", ",", 
                 RowBox[{
                  RowBox[{"\"\<cudnnStatus_t CUDNNWINAPI\>\"", "~~", 
                   RowBox[{"WhitespaceCharacter", "..."}], "~~", "__", "~~", 
                   "\"\<(\>\"", "~~", 
                   RowBox[{"Shortest", "[", "args___", "]"}], "~~", 
                   "\"\<)\>\""}], "\[Rule]", "args"}]}], "]"}], ",", 
               "\"\<\\n\>\""}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"__", "~~", 
             RowBox[{"WhitespaceCharacter", ".."}], "~~", 
             RowBox[{"PunctuationCharacter", "..."}], "~~", " ", "x__", "~~", 
             
             RowBox[{
              RowBox[{"Except", "[", "WordCharacter", "]"}], "..."}]}], 
            "\[Rule]", "x"}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744050954166017*^9, 3.744051108360518*^9}, {
   3.744051186585456*^9, 3.7440512504068727`*^9}, {3.744051331507245*^9, 
   3.744051379223215*^9}, {3.744051442863686*^9, 3.744051471778433*^9}, {
   3.744051502838203*^9, 3.7440515399703903`*^9}, {3.74405157262503*^9, 
   3.744051593610305*^9}, {3.744052068775159*^9, 3.744052070953279*^9}, {
   3.7440522368629923`*^9, 3.744052241437139*^9}, {3.744052278299735*^9, 
   3.744052373487513*^9}, {3.744052440727172*^9, 3.7440524568157673`*^9}, {
   3.744052544929085*^9, 3.744052560873177*^9}, {3.7440526402616167`*^9, 
   3.744052767725628*^9}, 3.7440532709111433`*^9, {3.74405332391562*^9, 
   3.744053325893333*^9}, {3.74405336362411*^9, 3.744053450862556*^9}, {
   3.744053498123642*^9, 3.744053503861733*^9}, {3.744053620697783*^9, 
   3.7440536261064*^9}, 3.7440548047643127`*^9, {3.7440548470670757`*^9, 
   3.7440549182969637`*^9}, {3.74405765193889*^9, 3.7440576537463093`*^9}},
 CellLabel->
  "In[785]:=",ExpressionUUID->"5478099a-fdcd-409b-bf28-2252f86fbec2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getArgs", "[", "s_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"StringCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "s", "]"}], ",", 
     RowBox[{
      RowBox[{"__", "~~", 
       RowBox[{"WhitespaceCharacter", ".."}], "~~", 
       RowBox[{"PunctuationCharacter", "..."}], "~~", " ", "x__", "~~", 
       RowBox[{
        RowBox[{"Except", "[", "WordCharacter", "]"}], "..."}]}], "\[Rule]", 
      "x"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.744057844530705*^9, 3.744057913501873*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"63e1244f-a63d-42cc-86cd-3bb4220707f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "funArgs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funArgs", "[", "s0_", "]"}], ":=", 
  RowBox[{"getArgs", "[", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"Whitespace", ".."}], "\[Rule]", "\"\< \>\""}]}], "]"}], 
      "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", "=", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s0", ",", 
           RowBox[{
            RowBox[{"\"\</*\>\"", "~~", 
             RowBox[{"Shortest", "[", "x___", "]"}], "~~", "\"\<*/\>\""}], 
            "\[Rule]", "\"\<\>\""}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"StringTrim", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "WhitespaceCharacter", "|", "\"\<[\>\"", "|", "\"\<]\>\"", "|", 
              "\"\<,\>\""}], ")"}], "..."}]}], "]"}], "&"}], "/@", 
        "\[IndentingNewLine]", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"StringCases", "[", 
           RowBox[{"s", ",", 
            RowBox[{
             RowBox[{"\"\<(\>\"", "~~", "x___", "~~", "\"\<)\>\""}], 
             "\[Rule]", "x"}]}], "]"}], ",", "\"\<,\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.744057645209578*^9, 3.744057841539855*^9}},
 CellLabel->
  "In[822]:=",ExpressionUUID->"cde963b7-31c2-4a2f-bee5-b1ef4cd16138"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funArgs", "[", 
  RowBox[{"funcs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.744052536201295*^9, 3.744052538008154*^9}, {
  3.7440535734362288`*^9, 3.744053581741638*^9}, {3.744058236577395*^9, 
  3.744058240043133*^9}},
 CellLabel->
  "In[866]:=",ExpressionUUID->"16629417-a24a-4c6a-891d-2ce469475fca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"handle\"\>", ",", "\<\"rstatus\"\>", ",", "\<\"mode\"\>", 
   ",", "\<\"tag\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7440525384398613`*^9, 3.744052553141561*^9}, {
   3.74405264317183*^9, 3.744052769042315*^9}, 3.7440533977464123`*^9, 
   3.744053452161511*^9, {3.744053500566661*^9, 3.744053505080031*^9}, {
   3.744053576647368*^9, 3.744053582222261*^9}, 3.744053627424905*^9, 
   3.7440549352630672`*^9, 3.744057472807858*^9, 3.744057508681539*^9, {
   3.744057718997355*^9, 3.744057745814104*^9}, {3.744057775858054*^9, 
   3.744057823494329*^9}, {3.744057882717087*^9, 3.744057915844227*^9}, {
   3.744058231221238*^9, 3.744058240590212*^9}},
 CellLabel->
  "Out[866]=",ExpressionUUID->"52910b25-3277-49ff-90d0-739c134a5161"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nonVoidTempl", "=", 
   RowBox[{
   "StringTemplate", "[", 
    "\"\<\n// `ii`\n`funProto` {\n   using fun_t = decltype(`funName`);\n   \
static const std::string funName{\\\"`funName`\\\"};\n   static fun_t * \
orig_`funName` = (fun_t *) dlsym(RTLD_NEXT,\\\"`funName`\\\");\n\n   \n   if \
(!is_record_time_enabled_q()) {\n      return orig_`funName`(`funArgs`);\n   \
}\n   const auto tic = now();\n   const auto res = orig_`funName`(`funArgs`);\
\n   const auto toc = now();\n   const json js = {\n       {\\\"src\\\", \
\\\"cuDNN\\\"},\n       {\\\"function_name\\\", funName},\n       \
{\\\"time_unit\\\", \\\"ns\\\"},\n       {\\\"start\\\", \
to_nanoseconds(tic)},\n       {\\\"end\\\", to_nanoseconds(toc)},\n       {\\\
\"arguments\\\", json::object({\n       `arguments`\n       })}\n      };\n   \
   const auto str = js.dump();\n      record_cudnn_time(str.c_str());\n   \
return res;\n}\n\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"voidTempl", "=", 
   RowBox[{
   "StringTemplate", "[", 
    "\"\<\n// `ii`\n`funProto` {\n   using fun_t = decltype(`funName`);\n   \
static const std::string funName{\\\"`funName`\\\"};\n   static fun_t * \
orig_`funName` = (fun_t *) dlsym(RTLD_NEXT,\\\"`funName`\\\");\n\n   \n   if \
(!is_record_time_enabled_q()) { \n      orig_`funName`(`funArgs`);\n      \
return \n   }\n\n   const auto tic = now();\n   orig_`funName`(`funArgs`);\n  \
 const auto toc = now();\n\n   const json js = {\n       {\\\"src\\\", \
\\\"cuDNN\\\"},\n       {\\\"function_name\\\", funName},\n       \
{\\\"time_unit\\\", \\\"ns\\\"},\n       {\\\"start\\\", \
to_nanoseconds(tic)},\n       {\\\"end\\\", to_nanoseconds(toc)},\n       {\\\
\"arguments\\\", json::object({\n       `arguments`\n       })}\n      };\n   \
const auto str = js.dump();\n   record_cudnn_time(str.c_str());\n} \n\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744051620035857*^9, 3.744051708330956*^9}, {
   3.744051815951988*^9, 3.744051902528863*^9}, {3.744052161381064*^9, 
   3.744052169532848*^9}, {3.744052842949479*^9, 3.744052870342079*^9}, {
   3.744052942073258*^9, 3.744052942797998*^9}, 3.744052991347445*^9, {
   3.744053125173815*^9, 3.744053144729968*^9}, {3.744053191041461*^9, 
   3.74405319163097*^9}, {3.744053513923011*^9, 3.744053515083164*^9}, 
   3.7440535487707367`*^9, {3.744053853956914*^9, 3.744053857651092*^9}, {
   3.744054123571159*^9, 3.7440541308610067`*^9}, {3.744054351924728*^9, 
   3.744054361625259*^9}, {3.744055123806756*^9, 3.744055131341151*^9}, {
   3.744055300504327*^9, 3.74405537371157*^9}, {3.744055405965316*^9, 
   3.74405552772976*^9}, {3.744055569672668*^9, 3.744055600891958*^9}, {
   3.744055694903762*^9, 3.744055700711698*^9}, {3.744055972761599*^9, 
   3.744055982663368*^9}, {3.744056144607139*^9, 3.744056196059149*^9}, {
   3.744056276706468*^9, 3.744056325563327*^9}, {3.744056416234048*^9, 
   3.7440564648858232`*^9}, {3.744056611715114*^9, 3.7440566203967648`*^9}, {
   3.744057050614208*^9, 3.744057100164886*^9}, {3.744057206975374*^9, 
   3.744057222030863*^9}, {3.744057357917218*^9, 3.744057361970828*^9}, {
   3.744057498508765*^9, 3.7440575069949636`*^9}, {3.744057553452539*^9, 
   3.744057560275751*^9}, {3.74405837713947*^9, 3.7440584084834223`*^9}, {
   3.744059235394108*^9, 3.744059246086437*^9}, {3.74405936996126*^9, 
   3.744059442401312*^9}, {3.7440594734422913`*^9, 3.7440594943232327`*^9}, {
   3.7440595861825542`*^9, 3.7440595901443367`*^9}, {3.744097624290121*^9, 
   3.744097641626278*^9}},
 CellLabel->
  "In[964]:=",ExpressionUUID->"4ed45e93-d144-4897-bb4a-cb87934e3a63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ignoreArg", "[", 
    RowBox[{"e_", ",", "\"\<handle\>\""}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ignoreArg", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xPrint", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"e", ",", 
       RowBox[{"\"\<*\>\"", "~~", 
        RowBox[{"WhitespaceCharacter", "..."}], "~~", " ", "s"}]}], "]"}], "||",
      "\[IndentingNewLine]", 
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"e", ",", 
       RowBox[{"s", "~~", "\"\<[\>\""}]}], "]"}], "||", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{"e", ",", 
         RowBox[{"\"\<_t\>\"", "~~", 
          RowBox[{"WhitespaceCharacter", "..."}], "~~", " ", "s"}]}], "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"e", ",", 
          RowBox[{"\"\<size_t\>\"", "~~", 
           RowBox[{"WhitespaceCharacter", "..."}], "~~", " ", "s"}]}], 
         "]"}]}]}], ")"}], "||", "\[IndentingNewLine]", 
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"e", ",", 
       RowBox[{"\"\<void\>\"", "~~", 
        RowBox[{"WhitespaceCharacter", "..."}], "~~", " ", "s"}]}], "]"}]}]}],
    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.744054395495097*^9, 3.744054457063992*^9}, {
   3.744054488267619*^9, 3.7440544886941433`*^9}, {3.744054523526276*^9, 
   3.744054540626555*^9}, 3.7440545861345987`*^9, {3.7440546693832684`*^9, 
   3.744054675708757*^9}, 3.744054956099806*^9, 3.744054997389533*^9, {
   3.7440550419491262`*^9, 3.74405505071509*^9}, 3.744059061301414*^9, {
   3.744059132350298*^9, 3.744059139192223*^9}, {3.744059682128963*^9, 
   3.74405969041997*^9}},
 CellLabel->
  "In[966]:=",ExpressionUUID->"37f36a88-d9e3-4e86-8ef4-f67e9e07a268"],

Cell[BoxData[{
 RowBox[{"ii", ":=", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gen", "[", "e_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"TemplateApply", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"returnType", "[", "e", "]"}], "=!=", "\"\<void\>\""}], ",", 
      "\[IndentingNewLine]", "nonVoidTempl", ",", "\[IndentingNewLine]", 
      "voidTempl"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<ii\>\"", "\[Rule]", 
       RowBox[{"ii", "++"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<funProto\>\"", "\[Rule]", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"e", ",", "\"\<;\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"\"\<funName\>\"", "\[Rule]", 
       RowBox[{"funName", "[", "e", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<funArgs\>\"", "\[Rule]", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"funArgs", "[", "e", "]"}], ",", "\"\<, \>\""}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<arguments\>\"", "\[Rule]", 
       RowBox[{"StringRiffle", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"StringTrim", "/@", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "\"\<{\\\"\>\"", "<>", "#", "<>", "\"\<\\\", \>\"", "<>", "#", 
                "<>", "\"\<}\>\""}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"funArgs", "[", "e", "]"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"ignoreArg", "[", 
                   RowBox[{"e", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{"#", "=!=", "\"\<\>\""}], "&"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\>\"", ",", "\"\<,\\n              \>\"", ",", "\"\<\>\""}], 
          "}"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.744051710170887*^9, 3.7440518004576*^9}, {
   3.744051914465232*^9, 3.7440520326317463`*^9}, {3.744052084944789*^9, 
   3.744052099802762*^9}, {3.744052499551566*^9, 3.7440525011541843`*^9}, {
   3.74405315543077*^9, 3.744053177191043*^9}, 3.744053276088039*^9, {
   3.74405352025033*^9, 3.7440535377649727`*^9}, {3.74405425512671*^9, 
   3.7440542752997847`*^9}, {3.744054385387323*^9, 3.744054390840736*^9}, 
   3.744054493097406*^9, {3.7440550970080967`*^9, 3.744055103994018*^9}, {
   3.7440551371375628`*^9, 3.7440551382644873`*^9}, {3.744055185436001*^9, 
   3.744055281605112*^9}, {3.744055350538431*^9, 3.744055350696443*^9}, 
   3.7440554477397127`*^9, {3.744055548230908*^9, 3.7440555494149513`*^9}, {
   3.7440569920193996`*^9, 3.744056999387837*^9}, {3.744058054811812*^9, 
   3.744058066684507*^9}, {3.744058148101326*^9, 3.7440581826305103`*^9}, {
   3.744058249523818*^9, 3.7440582496174297`*^9}, {3.74405829707463*^9, 
   3.744058297264242*^9}, {3.74405835257603*^9, 3.744058368033806*^9}, {
   3.744058894164784*^9, 3.744058895634758*^9}},
 CellLabel->
  "In[968]:=",ExpressionUUID->"12c1c781-6a42-4c76-92e0-1c280201f734"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ii", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exp", "=", "\[IndentingNewLine]", 
   RowBox[{"StringRiffle", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<#include \\\"utils.hpp\\\"\>\"", ",", "\[IndentingNewLine]", 
        "\"\<#include \\\"cudnn.h\\\"\>\"", ",", "\[IndentingNewLine]", 
        "\"\<#include \\\"json.hpp\\\"\>\"", ",", "\[IndentingNewLine]", 
        "\"\<#include \\\"recorder.h\\\"\>\"", ",", "\[IndentingNewLine]", 
        "\"\<#include <dlfcn.h>\>\"", ",", "\[IndentingNewLine]", "\"\<\>\"", 
        ",", "\[IndentingNewLine]", "\"\<using json = nlohmann::json;\>\"", 
        ",", "\[IndentingNewLine]", 
        RowBox[{"gen", "/@", "funcs"}]}], "\[IndentingNewLine]", "}"}], "]"}],
      ",", "\[IndentingNewLine]", "\"\<\\n\>\""}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744051762216124*^9, 3.744051765907958*^9}, {
   3.74405220932183*^9, 3.7440522263897753`*^9}, 3.744052508073656*^9, {
   3.744052782098175*^9, 3.744052783211507*^9}, {3.744053198905219*^9, 
   3.744053208487987*^9}, {3.74405389600012*^9, 3.7440540079638653`*^9}, {
   3.7440540961518583`*^9, 3.744054102500148*^9}, {3.744055166966316*^9, 
   3.7440551713764*^9}, 3.744055497955531*^9, {3.744056489749304*^9, 
   3.744056523433805*^9}, {3.744058107313932*^9, 3.744058110230895*^9}, 
   3.7440581864074697`*^9, {3.7440582645251703`*^9, 3.7440582657635727`*^9}, 
   3.744058306817576*^9, {3.744059505149218*^9, 3.744059505204513*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"c7820935-75c7-41bc-b140-1a0954698915"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/abduld/.gvm/pkgsets/go1.10.3/global/src/github.com/rai-project/\
cudnn_tracer/cudnn_wrapper.cpp\>\"", ",", "exp", ",", "\"\<Text\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7440539079930363`*^9, 3.744053931771693*^9}, {
  3.7440541143886747`*^9, 3.744054115243382*^9}},
 CellLabel->
  "In[972]:=",ExpressionUUID->"c0e1c670-2e97-4fb0-87ad-41783948ce41"],

Cell[BoxData["\<\"/Users/abduld/.gvm/pkgsets/go1.10.3/global/src/github.com/\
rai-project/cudnn_tracer/cudnn_wrapper.cpp\"\>"], "Output",
 CellChangeTimes->{
  3.744053932524399*^9, {3.744054107128253*^9, 3.744054134033671*^9}, 
   3.744054277663067*^9, 3.7440544598118753`*^9, 3.74405449525039*^9, 
   3.744054543248225*^9, 3.744054589336953*^9, 3.7440549604327707`*^9, 
   3.7440550011280413`*^9, 3.7440550600954123`*^9, 3.74405510625242*^9, {
   3.7440551439080133`*^9, 3.744055172533023*^9}, 3.744055216316002*^9, {
   3.7440552576860447`*^9, 3.744055311848009*^9}, 3.744055352968742*^9, 
   3.744055383876451*^9, {3.744055449760228*^9, 3.744055499022975*^9}, {
   3.7440555333809547`*^9, 3.744055551461075*^9}, 3.7440556057455883`*^9, 
   3.744055704360153*^9, 3.744055987913642*^9, 3.744056295517991*^9, 
   3.744056329268325*^9, 3.744056440380389*^9, {3.744056492972204*^9, 
   3.744056524552721*^9}, 3.7440566243188562`*^9, 3.7440570016521473`*^9, 
   3.7440570704807577`*^9, 3.744057104198485*^9, 3.744057225973537*^9, 
   3.7440574730541687`*^9, 3.7440575089669323`*^9, 3.7440575640099707`*^9, 
   3.7440579213818502`*^9, 3.744058069018043*^9, {3.744058167556898*^9, 
   3.744058190020739*^9}, {3.7440582516929417`*^9, 3.744058266857717*^9}, {
   3.744058299231846*^9, 3.744058307888302*^9}, 3.744058359024474*^9, {
   3.744058394925229*^9, 3.7440584116730947`*^9}, 3.744058897284338*^9, 
   3.7440590641666603`*^9, 3.744059142763946*^9, 3.744059249724412*^9, {
   3.744059498075309*^9, 3.744059506876457*^9}, 3.744059593503619*^9, 
   3.744059693515401*^9, 3.744097645978364*^9},
 CellLabel->
  "Out[972]=",ExpressionUUID->"c5e5f1d5-5907-4a78-b62f-a122ec332287"]
}, Open  ]]
},
WindowSize->{1920, 1131},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (May 22, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 332, 8, 46, "Input",ExpressionUUID->"1a0776aa-c9c5-44ae-b6b5-2a25f9aaa235"],
Cell[893, 30, 555, 13, 46, "Input",ExpressionUUID->"4c48b5dc-c772-44c2-acc1-cfb50732181a"],
Cell[1451, 45, 562, 15, 46, "Input",ExpressionUUID->"6708290d-0de3-43d7-90fa-2434a9b4f033"],
Cell[2016, 62, 5240, 112, 761, "Input",ExpressionUUID->"5478099a-fdcd-409b-bf28-2252f86fbec2"],
Cell[7259, 176, 639, 16, 46, "Input",ExpressionUUID->"63e1244f-a63d-42cc-86cd-3bb4220707f2"],
Cell[7901, 194, 1742, 46, 296, "Input",ExpressionUUID->"cde963b7-31c2-4a2f-bee5-b1ef4cd16138"],
Cell[CellGroupData[{
Cell[9668, 244, 365, 8, 46, "Input",ExpressionUUID->"16629417-a24a-4c6a-891d-2ce469475fca"],
Cell[10036, 254, 781, 13, 52, "Output",ExpressionUUID->"52910b25-3277-49ff-90d0-739c134a5161"]
}, Open  ]],
Cell[10832, 270, 3638, 57, 1876, "Input",ExpressionUUID->"4ed45e93-d144-4897-bb4a-cb87934e3a63"],
Cell[14473, 329, 2010, 46, 295, "Input",ExpressionUUID->"37f36a88-d9e3-4e86-8ef4-f67e9e07a268"],
Cell[16486, 377, 3450, 71, 574, "Input",ExpressionUUID->"12c1c781-6a42-4c76-92e0-1c280201f734"],
Cell[19939, 450, 1709, 30, 481, "Input",ExpressionUUID->"c7820935-75c7-41bc-b140-1a0954698915"],
Cell[CellGroupData[{
Cell[21673, 484, 422, 9, 46, "Input",ExpressionUUID->"c0e1c670-2e97-4fb0-87ad-41783948ce41"],
Cell[22098, 495, 1673, 24, 52, "Output",ExpressionUUID->"c5e5f1d5-5907-4a78-b62f-a122ec332287"]
}, Open  ]]
}
]
*)

